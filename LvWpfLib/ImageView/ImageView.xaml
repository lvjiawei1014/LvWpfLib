<UserControl x:Class="Ncer.UI.ImageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ncer.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" MouseWheel="UserControl_MouseWheel" MouseMove="UserControl_MouseMove" MouseLeftButtonDown="UserControl_MouseLeftButtonDown" MouseLeftButtonUp="UserControl_MouseLeftButtonUp" ContextMenu="{DynamicResource ContextMenu}" ContextMenuOpening="UserControl_ContextMenuOpening" MouseRightButtonDown="UserControl_MouseRightButtonDown" ManipulationStarted="UserControl_ManipulationStarted" ManipulationDelta="UserControl_ManipulationDelta" ManipulationCompleted="UserControl_ManipulationCompleted" IsManipulationEnabled="False">
    <UserControl.Resources>
        <DrawingBrush x:Key="TileBack" TileMode="Tile" Viewbox="0,0,16,16" Viewport="0,0,16,16" ViewportUnits="Absolute" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="#333333" Geometry="M0,0L0,16 16,16 16,0z"/>
                    <GeometryDrawing Brush="#222222" Geometry="M0,0L0,8 8,8 8,0z"/>
                    <GeometryDrawing Brush="#222222" Geometry="M8,8L8,16 16,16 16,8z"/>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Rect" TileMode="None" >
            <DrawingBrush.Drawing>
                <GeometryDrawing  Geometry="M4,4L4,20 20,20 20,4z" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="White"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Ellipse" TileMode="None" >
            <DrawingBrush.Drawing>
                <GeometryDrawing >
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="12,12" RadiusX="6" RadiusY="6"/>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Pen>
                        <Pen Brush="White"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Polygon" TileMode="None" >
            <DrawingBrush.Drawing>
                <GeometryDrawing  Geometry="M7,8L3,12 5,17 17,16,20,10 16,6z" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="White"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>


        <ContextMenu x:Key="ContextMenu">
            <MenuItem x:Name="EditMode" Header="编辑模式" Click="MenuItem_Click"/>
            <Separator/>
            <MenuItem x:Name="DrawPoint" Header="绘制点" Click="MenuItem_Click"/>
            <MenuItem x:Name="DrawRect" Header="绘制矩形" Click="MenuItem_Click"/>
            <MenuItem x:Name="DrawLine" Header="绘制线段" Click="MenuItem_Click"/>
            <Separator/>
            <MenuItem x:Name="AutoFit" Header="自适应窗口" Click="MenuItem_Click"/>
            <MenuItem x:Name="DisableAutoFit" Header="取消适应窗口" Click="MenuItem_Click"/>
            <Separator/>
            <MenuItem x:Name="DeleteSelectedElement" Header="删除所选图形" Click="MenuItem_Click"/>
            <MenuItem x:Name="DeleteAllElement" Header="删除全部图形" Click="MenuItem_Click"/>
        </ContextMenu>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyleColor" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="20" Height="20">
                                <Grid x:Name="markGrid" Margin="0" Width="Auto" Height="Auto">
                                    <Rectangle x:Name="optionMark" Stroke="{TemplateBinding Foreground}" MinWidth="6" MinHeight="6" Opacity="0" Width="Auto" Height="Auto" StrokeThickness="2"/>

                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <!--<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="717*"/>
            <ColumnDefinition Width="43*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="33*"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>
        <Border Visibility="{Binding ToolBoxVisibility}" HorizontalAlignment="Center" Grid.RowSpan="3" MinWidth="36" MinHeight="74" Background="#660097FF" BorderBrush="#FF0097FF" BorderThickness="1" VerticalAlignment="Center" Padding="0,10">
            <StackPanel>
                <Button x:Name="ibRect" Width="24" Height="24" Background="{DynamicResource Rect}" BorderBrush="{x:Null}" Margin="0,2" Click="IbElement_Click" />
                <Button x:Name="ibPolygon" Width="24" Height="24" Background="{DynamicResource Polygon}" BorderBrush="{x:Null}" Margin="0,2" Click="IbElement_Click" />
                <Button x:Name="ibEllipse" Width="24" Height="24" Background="{DynamicResource Ellipse}" BorderBrush="{x:Null}" Margin="0,2" Click="IbElement_Click" Visibility="Collapsed" />
                <Label Content="" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="2" FontSize="10"/>
                <RadioButton x:Name="rbColorGreen" IsChecked="True" Background="#FF19FF02" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{DynamicResource RadioButtonStyleColor}" Foreground="White" BorderThickness="0" Checked="RbColor_Checked"/>
                <RadioButton x:Name="rbColorRed" HorizontalContentAlignment="Center" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="24" Style="{DynamicResource RadioButtonStyleColor}" Background="Red" Foreground="White" Checked="RbColor_Checked"/>
                <RadioButton x:Name="rbColorBlue" Style="{DynamicResource RadioButtonStyleColor}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Height="24" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Background="#FF0097FF" Foreground="White" Checked="RbColor_Checked"/>
                <RadioButton x:Name="rbColorYellow" Style="{DynamicResource RadioButtonStyleColor}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Height="24" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Background="Yellow" Foreground="White" Checked="RbColor_Checked"/>
                <RadioButton x:Name="rbColorWhite" Style="{DynamicResource RadioButtonStyleColor}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Height="24" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Background="White" Foreground="Black" Checked="RbColor_Checked"/>
                <RadioButton x:Name="rbColorPurple" Style="{DynamicResource RadioButtonStyleColor}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Height="24" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Background="#FFC500FF" Foreground="White" Checked="RbColor_Checked"/>

            </StackPanel>
        </Border>

    </Grid>
    <!--<Trigger Property="Click" Value=""></Trigger>-->
</UserControl>
